{"version":3,"sources":["images/companyLogo.png","images/AboutUs.png","images/ourVision.png","images/AppLogo.png","components/Header.js","components/Body.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","companyLogo","companyLogoImage","className","src","alt","Body","visionImage","visionImg","appLogo","appLogoImage","contactImage","aboutUsImg","App","icon","faMailBulk","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,sMCiB5BC,EAbA,WACX,IAAMC,EAAcC,IAEpB,OACI,yBAAKC,UAAU,cACX,yBAAKC,IAAKH,EAAaE,UAAU,eAAeE,IAAI,SACpD,0BAAMF,UAAU,eAAhB,a,iDCiJGG,EAtJF,WAET,IAAMC,EAAcC,IACdC,EAAUC,IACVC,EAAeC,IAErB,OACI,yBAAKT,UAAU,eAEX,yBAAKA,UAAU,WACX,yBAAKC,IAAKG,EAAaJ,UAAU,QAAQE,IAAI,MAC7C,yBAAKF,UAAU,gBACX,yBAAKA,UAAU,uBAAf,cAGA,yBAAKA,UAAU,sBAAf,+NASR,yBAAKA,UAAU,WACX,yBAAKC,IAAKK,EAASN,UAAU,QAAQE,IAAI,SACzC,yBAAKF,UAAU,gBACX,yBAAKA,UAAU,uBAAf,gBAGA,yBAAKA,UAAU,YAAf,cACA,yBAAKA,UAAU,sBAAf,4IAG8B,6BAAM,6BAHpC,uCAKwC,6BALxC,4CAWR,yBAAKA,UAAU,WACX,yBAAKC,IAAKO,EAAcR,UAAU,QAAQE,IAAI,MAC9C,yBAAKF,UAAU,gBACX,yBAAKA,UAAU,uBAAf,YAGA,yBAAKA,UAAU,sBAAf,8NAOA,yBAAK,UAAU,uBACX,6BADJ,iBAGA,yBAAK,UAAU,gBACX,2BAAO,UAAU,SACb,4BACI,wBAAI,UAAU,qBAAd,QAGA,wBAAIA,UAAU,iBACd,wBAAI,UAAU,sBAAd,aAIJ,4BACI,wBAAI,UAAU,mBAAd,uBAGA,wBAAIA,UAAU,iBACd,wBAAI,UAAU,oBAAd,+CAIJ,4BACI,wBAAI,UAAU,mBAAd,kBAGA,wBAAIA,UAAU,iBACd,wBAAI,UAAU,oBAAd,iCAIJ,4BACI,wBAAI,UAAU,mBAAd,eAGA,wBAAIA,UAAU,iBACd,wBAAI,UAAU,oBAAd,wBAIJ,4BACI,wBAAI,UAAU,mBAAd,YAGA,wBAAIA,UAAU,iBACd,wBAAI,UAAU,oBAAd,wBAIJ,4BACI,wBAAI,UAAU,mBAAd,sBAGA,wBAAIA,UAAU,iBACd,wBAAI,UAAU,oBAAd,wBAIJ,4BACI,wBAAI,UAAU,mBAAd,oBAGA,wBAAIA,UAAU,iBACd,wBAAI,UAAU,oBAAd,uBAIJ,4BACI,wBAAI,UAAU,mBAAd,gBAGA,wBAAIA,UAAU,iBACd,wBAAI,UAAU,oBAAd,uBAIJ,4BACI,wBAAI,UAAU,mBAAd,eAGA,wBAAIA,UAAU,iBACd,wBAAI,UAAU,oBAAd,wBCtHjBU,MAjBf,WAEI,OACI,yBAAKV,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAiBA,UAAU,YAAYW,KAAMC,MAC7C,0CAAkB,6BAAM,6BAF5B,uBAIwB,6BAJxB,+CCDQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.399037f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/companyLogo.7a056dd1.png\";","module.exports = __webpack_public_path__ + \"static/media/AboutUs.360f75e2.png\";","module.exports = __webpack_public_path__ + \"static/media/ourVision.a9fcefd5.png\";","module.exports = __webpack_public_path__ + \"static/media/AppLogo.2f44cda3.png\";","import React from \"react\";\nimport companyLogoImage from '../images/companyLogo.png';\n\n\nconst Header = () => {\n    const companyLogo = companyLogoImage;\n\n    return (\n        <div className=\"app-header\">\n            <img src={companyLogo} className=\"company-logo\" alt=\"logo\" />\n            <span className=\"header-text\">\n                WATTDEV\n            </span>\n        </div>\n    )\n}\n\nexport default Header;\n","import React from \"react\";\nimport aboutUsImg from \"../images/AboutUs.png\";\nimport visionImg from \"../images/ourVision.png\";\nimport appLogoImage from \"../images/AppLogo.png\";\n\nconst Body = () => {\n\n    const visionImage = visionImg;\n    const appLogo = appLogoImage;\n    const contactImage = aboutUsImg;\n\n    return (\n        <div className=\"app-content\">\n\n            <div className=\"section\">\n                <img src={visionImage} className=\"image\" alt=\" \" />\n                <div className=\"section-text\">\n                    <div className=\"information-headers\">\n                        Our Vision\n                    </div>\n                    <div className=\"information-bodies\">\n                        With a young innovative and motivated team, we constantly try to\n                        deliver the best applications to our customers.\n                        Our mission is to inspire people to explore and capture\n                        the best photos and share it with their network.\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"section\">\n                <img src={appLogo} className=\"image\" alt=\"logo\" />\n                <div className=\"section-text\">\n                    <div className=\"information-headers\">\n                        Our Products\n                    </div>\n                    <div className=\"SnapThat\"> SNAPTHAT </div>\n                    <div className=\"information-bodies\">\n                        SnapThat is an application where users can upload,\n                        rate, and comment on each others photos of animals, nature,\n                        landscape, and much more. <br /><br />\n\n                        Web application: Link available soon<br />\n                        Phone application: Link available soon\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"section\">\n                <img src={contactImage} className=\"image\" alt=\" \" />\n                <div className=\"section-text\">\n                    <div className=\"information-headers\">\n                        About Us\n                    </div>\n                    <div className=\"information-bodies\">\n                        We are eight students from Heriot Watt Univerity,\n                        Edinburgh. â€¨This Company page is part of our one-year\n                        program called Software Engineering. We are a company\n                        developing applications for browsers, iOS, and Android.\n                    </div>\n                    <div className=\"team-members-header\">\n                        <br/>Team members:\n                    </div>\n                    <div className=\"team-members\">\n                        <table className=\"table\">\n                            <tr>\n                                <th className=\"table-header-left\">\n                                    Name\n                                </th>\n                                <th className=\"table-middle\"/>\n                                <th className=\"table-header-right\">\n                                    Position\n                                </th>\n                            </tr>\n                            <tr>\n                                <td className=\"table-data-left\">\n                                    William Thorenfeldt\n                                </td>\n                                <td className=\"table-middle\"/>\n                                <td className=\"table-data-rigth\">\n                                    Organisational Manager/Front-End developer\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"table-data-left\">\n                                    Calum Shepherd\n                                </td>\n                                <td className=\"table-middle\"/>\n                                <td className=\"table-data-rigth\">\n                                    Secretary/Back-End developer\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"table-data-left\">\n                                    Simon Paton\n                                </td>\n                                <td className=\"table-middle\"/>\n                                <td className=\"table-data-rigth\">\n                                    Front-End developer\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"table-data-left\">\n                                    Rob Bell\n                                </td>\n                                <td className=\"table-middle\"/>\n                                <td className=\"table-data-rigth\">\n                                    Front-End developer\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"table-data-left\">\n                                    Krishna Mattapalli\n                                </td>\n                                <td className=\"table-middle\"/>\n                                <td className=\"table-data-rigth\">\n                                    Front-End developer\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"table-data-left\">\n                                    Callum Finlayson\n                                </td>\n                                <td className=\"table-middle\"/>\n                                <td className=\"table-data-rigth\">\n                                    Back-End developer\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"table-data-left\">\n                                    Jiachen Dong\n                                </td>\n                                <td className=\"table-middle\"/>\n                                <td className=\"table-data-rigth\">\n                                    Back-End developer\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"table-data-left\">\n                                    Connor Ross\n                                </td>\n                                <td className=\"table-middle\"/>\n                                <td className=\"table-data-rigth\">\n                                    Report Writer\n                                </td>\n                            </tr>\n\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Body;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\n\nfunction App() {\n\n    return (\n        <div className=\"app\">\n            <Header />\n            <Body />\n            <div className=\"app-footer\">\n                <FontAwesomeIcon className=\"mail-icon\" icon={faMailBulk} />\n                <u>Contact us:</u><br /><br />\n\n                Email: wrt1@hw.ac.uk<br />\n                Office: Heriot Watt University, Edinburgh\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}